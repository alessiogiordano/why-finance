#
#  docker-compose.yaml
#  Progetto di Distributed Systems and Big Data
#  Anno Accademico 2024-25
#  (C) 2024 Luca Montera, Alessio Giordano
#
#  Created by Luca Montera on 24/11/24.
#

services:
    mysql_migration:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
            MYSQL_DATABASE: ${DB_NAME:-migration_db}
        ports:
        - "3309:3306"
        volumes:
        - mysql_migration:/var/lib/mysql
        - /Database/init_migrations.sql
        networks:
        - whyfinance-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-root}"]
            interval: 10s
            timeout: 60s
            retries: 20
            start_period: 60s
        restart: always
#---------------------------------------
    mysql_user:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: user_db
        ports:
            - "3307:3306"
        volumes:
            - mysql_user:/var/lib/mysql
        networks:
            - whyfinance-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-root}"]
            interval: 10s
            timeout: 60s
            retries: 20
            start_period: 60s
        restart: always
#---------------------------------------
    mysql_ticker:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: ticker_db
        ports:
            - "3308:3306"
        volumes:
            - mysql_ticker:/var/lib/mysql
        networks:
            - whyfinance-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-root}"]
            interval: 10s
            timeout: 60s
            retries: 20
            start_period: 60s
        restart: always
#---------------------------------------
    mysql_create_tables:
        build:
            context: ./Database
            dockerfile: Dockerfile
        environment:
        - USER_DB_HOST=${USER_DB_HOST:-mysql_user}  # Host del database user
        - USER_DB_PORT=${USER_DB_PORT:-3306}        # Porta del database user
        - USER_DB_NAME=${USER_DB_NAME:-user_db}     # Nome del database user
        - TICKER_DB_HOST=${TICKER_DB_HOST:-mysql_ticker}  # Host del database ticker
        - TICKER_DB_PORT=${TICKER_DB_PORT:-3306}         # Porta del database ticker
        - TICKER_DB_NAME=${TICKER_DB_NAME:-ticker_db}    # Nome del database ticker
        - DB_USER=${DB_USER:-root}                # Username comune ai database
        - DB_PASSWORD=${DB_PASSWORD:-root}        # Password comune ai database
        networks:
        - whyfinance-network
        depends_on:
            mysql_migration:
                condition: service_healthy
            mysql_user: 
                condition: service_healthy
            mysql_ticker:
                condition: service_healthy
#---####################################
    proxy:
        build:
            context: ./Proxy
            dockerfile: Dockerfile
        ports:
        - 80:80 # host:container
        environment:
        - PROXY_PORT=80
        - WATCH_SERVER_PORT=${WATCH_SERVER_PORT:-50052}
        - USER_SERVER_PORT=${USER_SERVER_PORT:-50051}
        networks:
        - whyfinance-network
        depends_on:
        - mysql_create_tables
        - user_server
        - watch_server
        - crawler
        restart: always
#---####################################
    circuit_breaker_redis:
        image: redis:alpine
        ports:
        - 30111:6379 # host:container
        networks:
        - whyfinance-network
        restart: always
#---------------------------------------
    circuit_breaker:
        build:
            context: ./CircuitBreaker
            dockerfile: Dockerfile
        environment:
        - REDIS_PORT=6379
        - CIRCUIT_BREAKER_PORT=30112
        ports:
        - 30112:30112
        depends_on:
        - circuit_breaker_redis
        networks:
        - whyfinance-network
        restart: always
#---####################################
    crawler:
        build:
            context: ./Crawler
            dockerfile: Dockerfile
        environment:
        - USER_DB_HOST=${USER_DB_HOST:-mysql_user}  # Host del database user
        - USER_DB_PORT=${USER_DB_PORT:-3306}        # Porta del database user
        - USER_DB_NAME=${USER_DB_NAME:-user_db}     # Nome del database user
        - TICKER_DB_HOST=${TICKER_DB_HOST:-mysql_ticker}  # Host del database ticker
        - TICKER_DB_PORT=${TICKER_DB_PORT:-3306}         # Porta del database ticker
        - TICKER_DB_NAME=${TICKER_DB_NAME:-ticker_db}    # Nome del database ticker
        - DB_USER=${DB_USER:-root}                # Username comune ai database
        - DB_PASSWORD=${DB_PASSWORD:-root}        # Password comune ai database
        - CIRCUIT_BREAKER_PORT=30112
        - CRAWLER_TIME_INTERVAL=60
        depends_on:
            mysql_migration:
                condition: service_healthy
            mysql_user: 
                condition: service_healthy
            mysql_ticker:
                condition: service_healthy
        networks:
        - whyfinance-network
        restart: on-failure
#---####################################
    user_redis:
        image: redis:alpine
        ports:
        - 30113:6379 # host:container
        networks:
        - whyfinance-network
        restart: always
#---------------------------------------
    user_server:
        build:
            context: ./Users
            dockerfile: Dockerfile
        ports:
        - "${USER_SERVER_PORT:-50051}:50051"
        environment:
        - USER_DB_HOST=${USER_DB_HOST:-mysql_user}  # Host del database user
        - USER_DB_PORT=${USER_DB_PORT:-3306}        # Porta del database user
        - USER_DB_NAME=${USER_DB_NAME:-user_db}     # Nome del database user
        - TICKER_DB_HOST=${TICKER_DB_HOST:-mysql_ticker}  # Host del database ticker
        - TICKER_DB_PORT=${TICKER_DB_PORT:-3306}         # Porta del database ticker
        - TICKER_DB_NAME=${TICKER_DB_NAME:-ticker_db}    # Nome del database ticker
        - DB_USER=${DB_USER:-root}                # Username comune ai database
        - DB_PASSWORD=${DB_PASSWORD:-root}        # Password comune ai database
        - USER_SERVER_PORT=${USER_SERVER_PORT:-50051}
        - REDIS_PORT=6379
        depends_on:
            user_redis:
                condition: service_started
            mysql_migration:
                condition: service_healthy
            mysql_user: 
                condition: service_healthy
            mysql_ticker:
                condition: service_healthy
        networks:
        - whyfinance-network
        restart: always
#---####################################
    watch_redis:
        image: redis:alpine
        ports:
        - 30114:6379 # host:container
        networks:
        - whyfinance-network
        restart: always
#---------------------------------------
    watch_server:
        build:
            context: ./Watch
            dockerfile: Dockerfile
        ports:
        - "${WATCH_SERVER_PORT:-50052}:50052"
        environment:
        - USER_DB_HOST=${USER_DB_HOST:-mysql_user}  # Host del database user
        - USER_DB_PORT=${USER_DB_PORT:-3306}        # Porta del database user
        - USER_DB_NAME=${USER_DB_NAME:-user_db}     # Nome del database user
        - TICKER_DB_HOST=${TICKER_DB_HOST:-mysql_ticker}  # Host del database ticker
        - TICKER_DB_PORT=${TICKER_DB_PORT:-3306}         # Porta del database ticker
        - TICKER_DB_NAME=${TICKER_DB_NAME:-ticker_db}    # Nome del database ticker
        - DB_USER=${DB_USER:-root}                # Username comune ai database
        - DB_PASSWORD=${DB_PASSWORD:-root}        # Password comune ai database
        - WATCH_SERVER_PORT=${WATCH_SERVER_PORT:-50052}
        - REDIS_PORT=6379
        depends_on:
            watch_redis:
                condition: service_started
            mysql_migration:
                condition: service_healthy
            mysql_user: 
                condition: service_healthy
            mysql_ticker:
                condition: service_healthy
        networks:
        - whyfinance-network
        restart: always
########################################
networks:
    whyfinance-network:
        driver: bridge
########################################
volumes:
    mysql_migration:
    mysql_user: 
    mysql_ticker: